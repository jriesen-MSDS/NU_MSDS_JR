
-------------------------------
    Initial Data Prep       
-------------------------------

----------------------------------------------
DataFrame drivetime_input

General description of the drivetime_input DataFrame:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 17506 entries, 0 to 17505
Data columns (total 13 columns):
 #   Column             Non-Null Count  Dtype 
---  ------             --------------  ----- 
 0   data_set           17506 non-null  object
 1   total_cost         17506 non-null  int64 
 2   lot_sale_days      17506 non-null  int64 
 3   overage            17506 non-null  object
 4   mileage            17506 non-null  int64 
 5   vehicle_type       17506 non-null  object
 6   domestic_import    17506 non-null  object
 7   vehicle_age        17506 non-null  int64 
 8   vehicle_age_group  17506 non-null  object
 9   color_set          17506 non-null  object
 10  makex              17506 non-null  object
 11  state              17506 non-null  object
 12  make_model         17506 non-null  object
dtypes: int64(4), object(9)
memory usage: 1.7+ MB
None

drivetime_input DataFrame (first and last five rows):
  data_set  total_cost  lot_sale_days  ...    makex  state        make_model
0    BUILD        4037            135  ...    BUICK     CA     BUICK.CENTURY
1    BUILD        4662             18  ...    MAZDA     TX     MAZDA.PROTEGE
2    BUILD        4459             65  ...      GEO     FL         GEO.METRO
3    BUILD        4279              1  ...      KIA     TX        KIA.SEPHIA
4    BUILD        4472             37  ...  MERCURY     NM  MERCURY.MYSTIQUE

[5 rows x 13 columns]

      data_set  total_cost  lot_sale_days  ...     makex  state        make_model
17501  HOLDOUT        3793             23  ...       GEO     CA         GEO.METRO
17502  HOLDOUT        5061             60  ...      FORD     VA       FORD.ESCORT
17503  HOLDOUT        4857              8  ...  CADILLAC     AZ  CADILLAC.DEVILLE
17504  HOLDOUT        3361             46  ...     BUICK     VA     BUICK.SKYLARK
17505  HOLDOUT        4068             59  ...    NISSAN     AZ     NISSAN.SENTRA

[5 rows x 13 columns]

----------------------------------------------
DataFrame drivetime_build

General description of the drivetime_build DataFrame:
<class 'pandas.core.frame.DataFrame'>
Int64Index: 8753 entries, 0 to 8752
Data columns (total 13 columns):
 #   Column             Non-Null Count  Dtype 
---  ------             --------------  ----- 
 0   data_set           8753 non-null   object
 1   total_cost         8753 non-null   int64 
 2   lot_sale_days      8753 non-null   int64 
 3   overage            8753 non-null   object
 4   mileage            8753 non-null   int64 
 5   vehicle_type       8753 non-null   object
 6   domestic_import    8753 non-null   object
 7   vehicle_age        8753 non-null   int64 
 8   vehicle_age_group  8753 non-null   object
 9   color_set          8753 non-null   object
 10  makex              8753 non-null   object
 11  state              8753 non-null   object
 12  make_model         8753 non-null   object
dtypes: int64(4), object(9)
memory usage: 957.4+ KB
None
       data_set   total_cost  lot_sale_days  ... makex  state        make_model
count      8753  8753.000000    8753.000000  ...  8753   8753              8753
unique        1          NaN            NaN  ...    20      8                99
top       BUILD          NaN            NaN  ...  FORD     TX  CHEVROLET.LUMINA
freq       8753          NaN            NaN  ...  1174   2187               514
mean        NaN  4886.428196      46.887124  ...   NaN    NaN               NaN
std         NaN   934.108000      52.834002  ...   NaN    NaN               NaN
min         NaN  1492.000000       0.000000  ...   NaN    NaN               NaN
25%         NaN  4291.000000       7.000000  ...   NaN    NaN               NaN
50%         NaN  4840.000000      24.000000  ...   NaN    NaN               NaN
75%         NaN  5445.000000      75.000000  ...   NaN    NaN               NaN
max         NaN  9813.000000     300.000000  ...   NaN    NaN               NaN

[11 rows x 13 columns]

drivetime_build DataFrame (first and last five rows):
  data_set  total_cost  lot_sale_days  ...    makex  state        make_model
0    BUILD        4037            135  ...    BUICK     CA     BUICK.CENTURY
1    BUILD        4662             18  ...    MAZDA     TX     MAZDA.PROTEGE
2    BUILD        4459             65  ...      GEO     FL         GEO.METRO
3    BUILD        4279              1  ...      KIA     TX        KIA.SEPHIA
4    BUILD        4472             37  ...  MERCURY     NM  MERCURY.MYSTIQUE

[5 rows x 13 columns]

     data_set  total_cost  lot_sale_days  ...       makex  state         make_model
8748    BUILD        3791             11  ...       BUICK     FL   BUICK.ROADMASTER
8749    BUILD        4380              4  ...   CHEVROLET     NM   CHEVROLET.LUMINA
8750    BUILD        6392              2  ...       HONDA     CA       HONDA.ACCORD
8751    BUILD        4725             11  ...  MITSUBISHI     TX  MITSUBISHI.GALANT
8752    BUILD        5416             23  ...        FORD     CA        FORD.TAURUS

[5 rows x 13 columns]

----------------------------------------------
DataFrame drivetime_dev

General description of the drivetime_dev DataFrame:
<class 'pandas.core.frame.DataFrame'>
Int64Index: 4376 entries, 8753 to 13128
Data columns (total 13 columns):
 #   Column             Non-Null Count  Dtype 
---  ------             --------------  ----- 
 0   data_set           4376 non-null   object
 1   total_cost         4376 non-null   int64 
 2   lot_sale_days      4376 non-null   int64 
 3   overage            4376 non-null   object
 4   mileage            4376 non-null   int64 
 5   vehicle_type       4376 non-null   object
 6   domestic_import    4376 non-null   object
 7   vehicle_age        4376 non-null   int64 
 8   vehicle_age_group  4376 non-null   object
 9   color_set          4376 non-null   object
 10  makex              4376 non-null   object
 11  state              4376 non-null   object
 12  make_model         4376 non-null   object
dtypes: int64(4), object(9)
memory usage: 478.6+ KB
None
       data_set   total_cost  lot_sale_days  ... makex  state        make_model
count      4376  4376.000000    4376.000000  ...  4376   4376              4376
unique        1          NaN            NaN  ...    20      8                94
top         DEV          NaN            NaN  ...  FORD     TX  CHEVROLET.LUMINA
freq       4376          NaN            NaN  ...   567   1017               243
mean        NaN  4903.206810      46.717779  ...   NaN    NaN               NaN
std         NaN   936.435078      53.173386  ...   NaN    NaN               NaN
min         NaN  1537.000000       0.000000  ...   NaN    NaN               NaN
25%         NaN  4308.000000       7.000000  ...   NaN    NaN               NaN
50%         NaN  4858.000000      24.000000  ...   NaN    NaN               NaN
75%         NaN  5436.500000      73.000000  ...   NaN    NaN               NaN
max         NaN  9327.000000     300.000000  ...   NaN    NaN               NaN

[11 rows x 13 columns]

drivetime_dev DataFrame (first and last five rows):
     data_set  total_cost  ...  state                  make_model
8753      DEV        4995  ...     GA                 FORD.ESCORT
8754      DEV        5595  ...     TX           OLDSMOBILE.AURORA
8755      DEV        4663  ...     FL  OLDSMOBILE.CUTLASS SUPREME
8756      DEV        5304  ...     FL         FORD.CROWN VICTORIA
8757      DEV        3938  ...     FL               MAZDA.PROTEGE

[5 rows x 13 columns]

      data_set  total_cost  lot_sale_days  ...   makex  state      make_model
13124      DEV        2322             51  ...     GEO     TX       GEO.PRIZM
13125      DEV        5257             90  ...  NISSAN     GA   NISSAN.SENTRA
13126      DEV        4916             22  ...   DODGE     AZ  DODGE.INTREPID
13127      DEV        3571              4  ...  TOYOTA     CA   TOYOTA.TERCEL
13128      DEV        5268             69  ...    FORD     GA     FORD.ESCORT

[5 rows x 13 columns]

----------------------------------------------
DataFrame drivetime_holdout

General description of the drivetime_holdout DataFrame:
<class 'pandas.core.frame.DataFrame'>
Int64Index: 4377 entries, 13129 to 17505
Data columns (total 13 columns):
 #   Column             Non-Null Count  Dtype 
---  ------             --------------  ----- 
 0   data_set           4377 non-null   object
 1   total_cost         4377 non-null   int64 
 2   lot_sale_days      4377 non-null   int64 
 3   overage            4377 non-null   object
 4   mileage            4377 non-null   int64 
 5   vehicle_type       4377 non-null   object
 6   domestic_import    4377 non-null   object
 7   vehicle_age        4377 non-null   int64 
 8   vehicle_age_group  4377 non-null   object
 9   color_set          4377 non-null   object
 10  makex              4377 non-null   object
 11  state              4377 non-null   object
 12  make_model         4377 non-null   object
dtypes: int64(4), object(9)
memory usage: 478.7+ KB
None
       data_set   total_cost  lot_sale_days  ... makex  state   make_model
count      4377  4377.000000    4377.000000  ...  4377   4377         4377
unique        1          NaN            NaN  ...    20      8           92
top     HOLDOUT          NaN            NaN  ...  FORD     TX  FORD.TAURUS
freq       4377          NaN            NaN  ...   546   1144          252
mean        NaN  4903.832762      46.784556  ...   NaN    NaN          NaN
std         NaN   934.599220      52.167332  ...   NaN    NaN          NaN
min         NaN  1375.000000       0.000000  ...   NaN    NaN          NaN
25%         NaN  4314.000000       8.000000  ...   NaN    NaN          NaN
50%         NaN  4864.000000      25.000000  ...   NaN    NaN          NaN
75%         NaN  5445.000000      73.000000  ...   NaN    NaN          NaN
max         NaN  9648.000000     300.000000  ...   NaN    NaN          NaN

[11 rows x 13 columns]

drivetime_holdout DataFrame (first and last five rows):
      data_set  total_cost  lot_sale_days  ...       makex  state     make_model
13129  HOLDOUT        4944             30  ...        FORD     TX    FORD.TAURUS
13130  HOLDOUT        5541             19  ...       BUICK     TX  BUICK.LESABRE
13131  HOLDOUT        4870             39  ...       MAZDA     TX      MAZDA.626
13132  HOLDOUT        5397             30  ...        FORD     TX    FORD.TAURUS
13133  HOLDOUT        4983             23  ...  OLDSMOBILE     NV  OLDSMOBILE.88

[5 rows x 13 columns]

      data_set  total_cost  lot_sale_days  ...     makex  state        make_model
17501  HOLDOUT        3793             23  ...       GEO     CA         GEO.METRO
17502  HOLDOUT        5061             60  ...      FORD     VA       FORD.ESCORT
17503  HOLDOUT        4857              8  ...  CADILLAC     AZ  CADILLAC.DEVILLE
17504  HOLDOUT        3361             46  ...     BUICK     VA     BUICK.SKYLARK
17505  HOLDOUT        4068             59  ...    NISSAN     AZ     NISSAN.SENTRA

[5 rows x 13 columns]

-------------------------------
     Study 1 Data Prep         
-------------------------------

General description of the prelim_model_data DataFrame:
<class 'pandas.core.frame.DataFrame'>
Int64Index: 8753 entries, 0 to 8752
Data columns (total 21 columns):
 #   Column              Non-Null Count  Dtype 
---  ------              --------------  ----- 
 0   total_cost          8753 non-null   int64 
 1   mileage             8753 non-null   int64 
 2   vehicle_age         8753 non-null   int64 
 3   domestic_import     8753 non-null   object
 4   vehicle_type        8753 non-null   object
 5   color_set           8753 non-null   object
 6   mfg_Domestic        8753 non-null   uint8 
 7   mfg_Import          8753 non-null   uint8 
 8   body_ECONOMY        8753 non-null   uint8 
 9   body_FAMILY.LARGE   8753 non-null   uint8 
 10  body_FAMILY.MEDIUM  8753 non-null   uint8 
 11  body_FAMILY.SMALL   8753 non-null   uint8 
 12  body_LUXURY         8753 non-null   uint8 
 13  color_BLACK         8753 non-null   uint8 
 14  color_BLUE          8753 non-null   uint8 
 15  color_GOLD          8753 non-null   uint8 
 16  color_GREEN         8753 non-null   uint8 
 17  color_PURPLE        8753 non-null   uint8 
 18  color_RED           8753 non-null   uint8 
 19  color_SILVER        8753 non-null   uint8 
 20  color_WHITE         8753 non-null   uint8 
dtypes: int64(3), object(3), uint8(15)
memory usage: 606.9+ KB
None

prelim_model_data DataFrame (first and last five rows):
   total_cost  mileage  vehicle_age  ... color_RED color_SILVER color_WHITE
0        4037    67341            8  ...         0            1           0
1        4662    69384            4  ...         0            1           0
2        4459    58239            4  ...         1            0           0
3        4279    58999            3  ...         1            0           0
4        4472    47234            6  ...         0            0           0

[5 rows x 21 columns]

      total_cost  mileage  vehicle_age  ... color_RED color_SILVER color_WHITE
8748        3791    65819            9  ...         0            1           0
8749        4380    66057            6  ...         0            0           0
8750        6392   100705            6  ...         0            1           0
8751        4725    88144            5  ...         1            0           0
8752        5416    64920            4  ...         0            0           0

[5 rows x 21 columns]

General description of the model_data DataFrame:
<class 'pandas.core.frame.DataFrame'>
Int64Index: 8753 entries, 0 to 8752
Data columns (total 15 columns):
 #   Column              Non-Null Count  Dtype
---  ------              --------------  -----
 0   total_cost          8753 non-null   int64
 1   mileage             8753 non-null   int64
 2   vehicle_age         8753 non-null   int64
 3   mfg_Domestic        8753 non-null   uint8
 4   body_ECONOMY        8753 non-null   uint8
 5   body_FAMILY.LARGE   8753 non-null   uint8
 6   body_FAMILY.MEDIUM  8753 non-null   uint8
 7   body_FAMILY.SMALL   8753 non-null   uint8
 8   color_BLACK         8753 non-null   uint8
 9   color_BLUE          8753 non-null   uint8
 10  color_GOLD          8753 non-null   uint8
 11  color_GREEN         8753 non-null   uint8
 12  color_PURPLE        8753 non-null   uint8
 13  color_RED           8753 non-null   uint8
 14  color_SILVER        8753 non-null   uint8
dtypes: int64(3), uint8(12)
memory usage: 376.1 KB
None
\model_data DataFrame (first and last five rows):
   total_cost  mileage  vehicle_age  ...  color_PURPLE  color_RED  color_SILVER
0        4037    67341            8  ...             0          0             1
1        4662    69384            4  ...             0          0             1
2        4459    58239            4  ...             0          1             0
3        4279    58999            3  ...             0          1             0
4        4472    47234            6  ...             0          0             0

[5 rows x 15 columns]

      total_cost  mileage  vehicle_age  ...  color_PURPLE  color_RED  color_SILVER
8748        3791    65819            9  ...             0          0             1
8749        4380    66057            6  ...             0          0             0
8750        6392   100705            6  ...             0          0             1
8751        4725    88144            5  ...             0          1             0
8752        5416    64920            4  ...             0          0             0

[5 rows x 15 columns]

Dimensions of model_data: (8753, 15)

-------------------------------
     Study 1 Modeling          
-------------------------------

Fold index: 0 ------------------------------------------
Shape of input data for this fold: 
Data Set: (Observations, Variables)
X_train: (7002, 14)
X_test: (1751, 14)
y_train: (7002,)
y_test: (1751,)

Regression model evaluation for: Linear_Regression
  Scikit Learn method: LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=True)
Coefficient of determination (R-squared): 0.17417708775141472
{'copy_X': True, 'fit_intercept': True, 'n_jobs': None, 'normalize': True}
Root mean-squared error: 801.4037321971772

Regression model evaluation for: Ridge_Regression
  Scikit Learn method: Ridge(alpha=1, copy_X=True, fit_intercept=True, max_iter=None, normalize=True,
      random_state=9999, solver='cholesky', tol=0.001)
Coefficient of determination (R-squared): 0.11011802486092204
{'alpha': 1, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': True, 'random_state': 9999, 'solver': 'cholesky', 'tol': 0.001}
Root mean-squared error: 831.905703168263

Regression model evaluation for: Lasso_Regression
  Scikit Learn method: Lasso(alpha=0.1, copy_X=True, fit_intercept=True, max_iter=1000, normalize=True,
      positive=False, precompute=False, random_state=9999, selection='cyclic',
      tol=0.0001, warm_start=False)
Coefficient of determination (R-squared): 0.17569492813063115
{'alpha': 0.1, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': True, 'positive': False, 'precompute': False, 'random_state': 9999, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
Root mean-squared error: 800.6669141881491

Regression model evaluation for: Random_Forest_Regression
  Scikit Learn method: RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features=14, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=0.01, min_samples_leaf=50,
                      min_samples_split=200, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=1, oob_score=False,
                      random_state=9999, verbose=0, warm_start=False)
Coefficient of determination (R-squared): 0.16434078322282486
{'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 14, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': 0.01, 'min_samples_leaf': 50, 'min_samples_split': 200, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': 1, 'oob_score': False, 'random_state': 9999, 'verbose': 0, 'warm_start': False}
Root mean-squared error: 806.1623292378773

Fold index: 1 ------------------------------------------
Shape of input data for this fold: 
Data Set: (Observations, Variables)
X_train: (7002, 14)
X_test: (1751, 14)
y_train: (7002,)
y_test: (1751,)

Regression model evaluation for: Linear_Regression
  Scikit Learn method: LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=True)
Coefficient of determination (R-squared): 0.2317200343902901
{'copy_X': True, 'fit_intercept': True, 'n_jobs': None, 'normalize': True}
Root mean-squared error: 833.6803542392116

Regression model evaluation for: Ridge_Regression
  Scikit Learn method: Ridge(alpha=1, copy_X=True, fit_intercept=True, max_iter=None, normalize=True,
      random_state=9999, solver='cholesky', tol=0.001)
Coefficient of determination (R-squared): 0.11750052979742309
{'alpha': 1, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': True, 'random_state': 9999, 'solver': 'cholesky', 'tol': 0.001}
Root mean-squared error: 893.505108683987

Regression model evaluation for: Lasso_Regression
  Scikit Learn method: Lasso(alpha=0.1, copy_X=True, fit_intercept=True, max_iter=1000, normalize=True,
      positive=False, precompute=False, random_state=9999, selection='cyclic',
      tol=0.0001, warm_start=False)
Coefficient of determination (R-squared): 0.22273752116675904
{'alpha': 0.1, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': True, 'positive': False, 'precompute': False, 'random_state': 9999, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
Root mean-squared error: 838.5397698690507

Regression model evaluation for: Random_Forest_Regression
  Scikit Learn method: RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features=14, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=0.01, min_samples_leaf=50,
                      min_samples_split=200, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=1, oob_score=False,
                      random_state=9999, verbose=0, warm_start=False)
Coefficient of determination (R-squared): 0.2189110265273
{'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 14, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': 0.01, 'min_samples_leaf': 50, 'min_samples_split': 200, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': 1, 'oob_score': False, 'random_state': 9999, 'verbose': 0, 'warm_start': False}
Root mean-squared error: 840.6013183241151

Fold index: 2 ------------------------------------------
Shape of input data for this fold: 
Data Set: (Observations, Variables)
X_train: (7002, 14)
X_test: (1751, 14)
y_train: (7002,)
y_test: (1751,)

Regression model evaluation for: Linear_Regression
  Scikit Learn method: LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=True)
Coefficient of determination (R-squared): 0.15888903236719365
{'copy_X': True, 'fit_intercept': True, 'n_jobs': None, 'normalize': True}
Root mean-squared error: 912.5994715268706

Regression model evaluation for: Ridge_Regression
  Scikit Learn method: Ridge(alpha=1, copy_X=True, fit_intercept=True, max_iter=None, normalize=True,
      random_state=9999, solver='cholesky', tol=0.001)
Coefficient of determination (R-squared): 0.09339467962513659
{'alpha': 1, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': True, 'random_state': 9999, 'solver': 'cholesky', 'tol': 0.001}
Root mean-squared error: 947.4639546451173

Regression model evaluation for: Lasso_Regression
  Scikit Learn method: Lasso(alpha=0.1, copy_X=True, fit_intercept=True, max_iter=1000, normalize=True,
      positive=False, precompute=False, random_state=9999, selection='cyclic',
      tol=0.0001, warm_start=False)
Coefficient of determination (R-squared): 0.154423190277317
{'alpha': 0.1, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': True, 'positive': False, 'precompute': False, 'random_state': 9999, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
Root mean-squared error: 915.0189678214994

Regression model evaluation for: Random_Forest_Regression
  Scikit Learn method: RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features=14, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=0.01, min_samples_leaf=50,
                      min_samples_split=200, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=1, oob_score=False,
                      random_state=9999, verbose=0, warm_start=False)
Coefficient of determination (R-squared): 0.15323290958672686
{'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 14, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': 0.01, 'min_samples_leaf': 50, 'min_samples_split': 200, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': 1, 'oob_score': False, 'random_state': 9999, 'verbose': 0, 'warm_start': False}
Root mean-squared error: 915.662756999625

Fold index: 3 ------------------------------------------
Shape of input data for this fold: 
Data Set: (Observations, Variables)
X_train: (7003, 14)
X_test: (1750, 14)
y_train: (7003,)
y_test: (1750,)

Regression model evaluation for: Linear_Regression
  Scikit Learn method: LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=True)
Coefficient of determination (R-squared): 0.1867522669976417
{'copy_X': True, 'fit_intercept': True, 'n_jobs': None, 'normalize': True}
Root mean-squared error: 820.1389376659761

Regression model evaluation for: Ridge_Regression
  Scikit Learn method: Ridge(alpha=1, copy_X=True, fit_intercept=True, max_iter=None, normalize=True,
      random_state=9999, solver='cholesky', tol=0.001)
Coefficient of determination (R-squared): 0.11965070704680758
{'alpha': 1, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': True, 'random_state': 9999, 'solver': 'cholesky', 'tol': 0.001}
Root mean-squared error: 853.3034677498471

Regression model evaluation for: Lasso_Regression
  Scikit Learn method: Lasso(alpha=0.1, copy_X=True, fit_intercept=True, max_iter=1000, normalize=True,
      positive=False, precompute=False, random_state=9999, selection='cyclic',
      tol=0.0001, warm_start=False)
Coefficient of determination (R-squared): 0.18630797756513062
{'alpha': 0.1, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': True, 'positive': False, 'precompute': False, 'random_state': 9999, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
Root mean-squared error: 820.3629341774717

Regression model evaluation for: Random_Forest_Regression
  Scikit Learn method: RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features=14, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=0.01, min_samples_leaf=50,
                      min_samples_split=200, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=1, oob_score=False,
                      random_state=9999, verbose=0, warm_start=False)
Coefficient of determination (R-squared): 0.17674311201670112
{'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 14, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': 0.01, 'min_samples_leaf': 50, 'min_samples_split': 200, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': 1, 'oob_score': False, 'random_state': 9999, 'verbose': 0, 'warm_start': False}
Root mean-squared error: 825.1704880919425

Fold index: 4 ------------------------------------------
Shape of input data for this fold: 
Data Set: (Observations, Variables)
X_train: (7003, 14)
X_test: (1750, 14)
y_train: (7003,)
y_test: (1750,)

Regression model evaluation for: Linear_Regression
  Scikit Learn method: LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=True)
Coefficient of determination (R-squared): 0.16186881683471377
{'copy_X': True, 'fit_intercept': True, 'n_jobs': None, 'normalize': True}
Root mean-squared error: 842.9860155725551

Regression model evaluation for: Ridge_Regression
  Scikit Learn method: Ridge(alpha=1, copy_X=True, fit_intercept=True, max_iter=None, normalize=True,
      random_state=9999, solver='cholesky', tol=0.001)
Coefficient of determination (R-squared): 0.10592420361824384
{'alpha': 1, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': True, 'random_state': 9999, 'solver': 'cholesky', 'tol': 0.001}
Root mean-squared error: 870.6659083709748

Regression model evaluation for: Lasso_Regression
  Scikit Learn method: Lasso(alpha=0.1, copy_X=True, fit_intercept=True, max_iter=1000, normalize=True,
      positive=False, precompute=False, random_state=9999, selection='cyclic',
      tol=0.0001, warm_start=False)
Coefficient of determination (R-squared): 0.1633936795226021
{'alpha': 0.1, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': True, 'positive': False, 'precompute': False, 'random_state': 9999, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
Root mean-squared error: 842.2188187729547

Regression model evaluation for: Random_Forest_Regression
  Scikit Learn method: RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features=14, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=0.01, min_samples_leaf=50,
                      min_samples_split=200, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=1, oob_score=False,
                      random_state=9999, verbose=0, warm_start=False)
Coefficient of determination (R-squared): 0.15456023340301372
{'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 14, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': 0.01, 'min_samples_leaf': 50, 'min_samples_split': 200, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': 1, 'oob_score': False, 'random_state': 9999, 'verbose': 0, 'warm_start': False}
Root mean-squared error: 846.6534967461837

----------------------------------------------
Average results from 5-fold cross-validation

Method                        R2
Linear_Regression           0.182681
Ridge_Regression            0.109318
Lasso_Regression            0.180511
Random_Forest_Regression    0.173558
dtype: float64

----------------------------------------------
Average results from 5-fold cross-validation

Method                        RMSE
Linear_Regression           842.161702
Ridge_Regression            879.368829
Lasso_Regression            843.361481
Random_Forest_Regression    846.850078
dtype: float64

-------------------------------
 Study 2. 3, and 4 Data Prep   
-------------------------------
Preliminary holdout data descriptive statistics:
        total_cost        mileage  vehicle_age
count  4377.000000    4377.000000  4377.000000
mean   4903.832762   76718.021019     5.405072
std     934.599220   16897.880255     1.738294
min    1375.000000    1036.000000     1.000000
25%    4314.000000   67292.000000     4.000000
50%    4864.000000   77751.000000     5.000000
75%    5445.000000   88815.000000     7.000000
max    9648.000000  115341.000000    12.000000

General description of the prelim_holdout_data DataFrame:
<class 'pandas.core.frame.DataFrame'>
Int64Index: 4377 entries, 13129 to 17505
Data columns (total 21 columns):
 #   Column              Non-Null Count  Dtype 
---  ------              --------------  ----- 
 0   total_cost          4377 non-null   int64 
 1   mileage             4377 non-null   int64 
 2   vehicle_age         4377 non-null   int64 
 3   domestic_import     4377 non-null   object
 4   vehicle_type        4377 non-null   object
 5   color_set           4377 non-null   object
 6   mfg_Domestic        4377 non-null   uint8 
 7   mfg_Import          4377 non-null   uint8 
 8   body_ECONOMY        4377 non-null   uint8 
 9   body_FAMILY.LARGE   4377 non-null   uint8 
 10  body_FAMILY.MEDIUM  4377 non-null   uint8 
 11  body_FAMILY.SMALL   4377 non-null   uint8 
 12  body_LUXURY         4377 non-null   uint8 
 13  color_BLACK         4377 non-null   uint8 
 14  color_BLUE          4377 non-null   uint8 
 15  color_GOLD          4377 non-null   uint8 
 16  color_GREEN         4377 non-null   uint8 
 17  color_PURPLE        4377 non-null   uint8 
 18  color_RED           4377 non-null   uint8 
 19  color_SILVER        4377 non-null   uint8 
 20  color_WHITE         4377 non-null   uint8 
dtypes: int64(3), object(3), uint8(15)
memory usage: 303.5+ KB
None

prelim_holdout_data DataFrame (first and last five rows):
       total_cost  mileage  vehicle_age  ... color_RED color_SILVER color_WHITE
13129        4944    79188            5  ...         0            0           0
13130        5541    72594            7  ...         0            0           0
13131        4870    82492            6  ...         0            0           0
13132        5397    71153            5  ...         0            1           0
13133        4983    93462            6  ...         1            0           0

[5 rows x 21 columns]

       total_cost  mileage  vehicle_age  ... color_RED color_SILVER color_WHITE
17501        3793    48016            5  ...         0            0           0
17502        5061    72985            4  ...         0            0           1
17503        4857    93040            8  ...         0            1           0
17504        3361    70751            8  ...         0            0           1
17505        4068    61770            7  ...         0            0           0

[5 rows x 21 columns]

General description of the holdout_data DataFrame:
<class 'pandas.core.frame.DataFrame'>
Int64Index: 4377 entries, 13129 to 17505
Data columns (total 21 columns):
 #   Column              Non-Null Count  Dtype 
---  ------              --------------  ----- 
 0   total_cost          4377 non-null   int64 
 1   mileage             4377 non-null   int64 
 2   vehicle_age         4377 non-null   int64 
 3   domestic_import     4377 non-null   object
 4   vehicle_type        4377 non-null   object
 5   color_set           4377 non-null   object
 6   mfg_Domestic        4377 non-null   uint8 
 7   mfg_Import          4377 non-null   uint8 
 8   body_ECONOMY        4377 non-null   uint8 
 9   body_FAMILY.LARGE   4377 non-null   uint8 
 10  body_FAMILY.MEDIUM  4377 non-null   uint8 
 11  body_FAMILY.SMALL   4377 non-null   uint8 
 12  body_LUXURY         4377 non-null   uint8 
 13  color_BLACK         4377 non-null   uint8 
 14  color_BLUE          4377 non-null   uint8 
 15  color_GOLD          4377 non-null   uint8 
 16  color_GREEN         4377 non-null   uint8 
 17  color_PURPLE        4377 non-null   uint8 
 18  color_RED           4377 non-null   uint8 
 19  color_SILVER        4377 non-null   uint8 
 20  color_WHITE         4377 non-null   uint8 
dtypes: int64(3), object(3), uint8(15)
memory usage: 303.5+ KB
None
\holdout_data DataFrame (first and last five rows):
       total_cost  mileage  vehicle_age  ...  color_PURPLE  color_RED  color_SILVER
13129        4944    79188            5  ...             0          0             0
13130        5541    72594            7  ...             0          0             0
13131        4870    82492            6  ...             0          0             0
13132        5397    71153            5  ...             0          0             1
13133        4983    93462            6  ...             0          1             0

[5 rows x 15 columns]

       total_cost  mileage  vehicle_age  ...  color_PURPLE  color_RED  color_SILVER
17501        3793    48016            5  ...             0          0             0
17502        5061    72985            4  ...             0          0             0
17503        4857    93040            8  ...             0          0             1
17504        3361    70751            8  ...             0          0             0
17505        4068    61770            7  ...             1          0             0

[5 rows x 15 columns]

Dimensions of holdout_data: (4377, 15)

-------------------------------
      Study 2 Modeling         
-------------------------------

Shape of input data for this phase of the modeling work: 
Data Set: (Observations, Variables)
X_train: (8753, 14)
y_train: (8753,)
X_holdout: (4377, 14)
y_holdout: (4377,)

----------------------------------------------
Regression Model Results (fitted coefficients)
                  name                description  coefficient
0            intercept                  Intercept  6706.095722
1              mileage                    Mileage    -0.001990
2          vehicle_age     Vehicle Age (in years)  -209.965975
3         mfg_Domestic      Domestic Manufacturer  -113.070635
4         body_ECONOMY        Body Type = Economy -1034.026665
5    body_FAMILY.LARGE   Body Type = Large Family  -256.501454
6   body_FAMILY.MEDIUM  Body Type = Medium Family  -495.961373
7    body_FAMILY.SMALL   Body Type = Small Family  -668.490006
8          color_BLACK              Color = BLACK   157.287467
9           color_BLUE               Color = BLUE   -42.459285
10          color_GOLD               Color = GOLD   131.509813
11         color_GREEN              Color = GREEN    61.640238
12        color_PURPLE             Color = PURPLE    46.336181
13           color_RED                Color = RED   -35.988291
14        color_SILVER             Color = SILVER    47.904799

Root mean-square error in training (build) data set:  840.02
R-squared in training (build) data set:  0.437286

Root mean-square error in holdout data set:  841.61
R-squared in holdout data set:  0.43464

-------------------------------
      Study 3 Modeling         
-------------------------------
StandardScaler(copy=True, with_mean=True, with_std=True)
[7.69265448e+04 5.44944590e+00 6.88449674e-01 1.20073118e-01
 1.65200503e-01 3.94036330e-01 1.78453102e-01 7.17468297e-02
 1.45321604e-01 9.49388781e-02 1.99360219e-01 1.03050383e-01
 8.07723066e-02 1.02821890e-01]
[1.69796741e+04 1.75618506e+00 4.63127110e-01 3.25047018e-01
 3.71361410e-01 4.88642713e-01 3.82893709e-01 2.58068251e-01
 3.52424794e-01 2.93130496e-01 3.99519364e-01 3.04024672e-01
 2.72485121e-01 3.03726108e-01]

Shape of input data for this phase of the modeling work: 
Data Set: (Observations, Variables)
X_train: (8753, 14)
y_train: (8753,)
X_holdout: (4377, 14)
y_holdout: (4377,)

----------------------------------------------
Regression Model Results (fitted coefficients)
                  name                description  coefficient
0            intercept                  Intercept  4886.428196
1              mileage                    Mileage   -33.783050
2          vehicle_age     Vehicle Age (in years)  -368.739108
3         mfg_Domestic      Domestic Manufacturer   -52.366076
4         body_ECONOMY        Body Type = Economy  -336.107284
5    body_FAMILY.LARGE   Body Type = Large Family   -95.254741
6   body_FAMILY.MEDIUM  Body Type = Medium Family  -242.347911
7    body_FAMILY.SMALL   Body Type = Small Family  -255.960618
8          color_BLACK              Color = BLACK    40.590902
9           color_BLUE               Color = BLUE   -14.963705
10          color_GOLD               Color = GOLD    38.549537
11         color_GREEN              Color = GREEN    24.626469
12        color_PURPLE             Color = PURPLE    14.087342
13           color_RED                Color = RED    -9.806274
14        color_SILVER             Color = SILVER    14.549938

Root mean-square error in training (build) data set:  840.02
R-squared in training (build) data set:  0.437286

Root mean-square error in holdout data set:  841.56
R-squared in holdout data set:  0.434743

-------------------------------
      Study 4 Modeling         
-------------------------------

Shape of input data for this phase of the modeling work: 
Data Set: (Observations, Variables)
X_train: (8753, 14)
y_train: (8753,)
X_holdout: (4377, 14)
y_holdout: (4377,)

---------------------------------------------------------------------------
Random Forests Regression Model Explanatory Variable Importance Results
                  name                description  importance
0              mileage                    Mileage    0.139788
1          vehicle_age     Vehicle Age (in years)    0.473076
2         mfg_Domestic      Domestic Manufacturer    0.069580
3         body_ECONOMY        Body Type = Economy    0.135933
4    body_FAMILY.LARGE   Body Type = Large Family    0.029620
5   body_FAMILY.MEDIUM  Body Type = Medium Family    0.066887
6    body_FAMILY.SMALL   Body Type = Small Family    0.073760
7          color_BLACK              Color = BLACK    0.000502
8           color_BLUE               Color = BLUE    0.004780
9           color_GOLD               Color = GOLD    0.001188
10         color_GREEN              Color = GREEN    0.003416
11        color_PURPLE             Color = PURPLE    0.000298
12           color_RED                Color = RED    0.000925
13        color_SILVER             Color = SILVER    0.000246

Root mean-square error in training (build) data set:  829.22
R-squared in training (build) data set:  0.460303

Root mean-square error in holdout data set:  837.56
R-squared in holdout data set:  0.443507

----------------------------------
 Study 5, 6, 7, and 8 Data Prep   
----------------------------------

Create build_data DataFrame
Variables in prelim_build_data Index(['overage', 'total_cost', 'domestic_import', 'vehicle_type', 'color_set',
       'makex', 'mileage', 'vehicle_age', 'overage_NO', 'overage_YES',
       'mfg_Domestic', 'mfg_Import', 'body_ECONOMY', 'body_FAMILY.LARGE',
       'body_FAMILY.MEDIUM', 'body_FAMILY.SMALL', 'body_LUXURY', 'color_BLACK',
       'color_BLUE', 'color_GOLD', 'color_GREEN', 'color_PURPLE', 'color_RED',
       'color_SILVER', 'color_WHITE', 'make_BUICK', 'make_CADILLAC',
       'make_CHEVROLET', 'make_CHRYSLER', 'make_DAEWOO', 'make_DODGE',
       'make_FORD', 'make_GEO', 'make_HONDA', 'make_HYUNDAI', 'make_KIA',
       'make_MAZDA', 'make_MERCURY', 'make_MITSUBISHI', 'make_NISSAN',
       'make_OLDSMOBILE', 'make_OTHER', 'make_PLYMOUTH', 'make_PONTIAC',
       'make_TOYOTA'],
      dtype='object')

Check binary variable coding of the prelim_build_data DataFrame:
     overage  total_cost domestic_import   vehicle_type color_set       makex  \
0        YES        4037        Domestic   FAMILY.LARGE    SILVER       BUICK   
1         NO        4662          Import   FAMILY.SMALL    SILVER       MAZDA   
...      ...         ...             ...            ...       ...         ...   
8751      NO        4725          Import  FAMILY.MEDIUM       RED  MITSUBISHI   
8752      NO        5416        Domestic   FAMILY.LARGE      BLUE        FORD   

      mileage  vehicle_age  overage_NO  overage_YES  mfg_Domestic  mfg_Import  \
0       67341            8           0            1             1           0   
1       69384            4           1            0             0           1   
...       ...          ...         ...          ...           ...         ...   
8751    88144            5           1            0             0           1   
8752    64920            4           1            0             1           0   

      body_ECONOMY  body_FAMILY.LARGE  body_FAMILY.MEDIUM  body_FAMILY.SMALL  \
0                0                  1                   0                  0   
1                0                  0                   0                  1   
...            ...                ...                 ...                ...   
8751             0                  0                   1                  0   
8752             0                  1                   0                  0   

      body_LUXURY  color_BLACK  color_BLUE  color_GOLD  color_GREEN  \
0               0            0           0           0            0   
1               0            0           0           0            0   
...           ...          ...         ...         ...          ...   
8751            0            0           0           0            0   
8752            0            0           1           0            0   

      color_PURPLE  color_RED  color_SILVER  color_WHITE  make_BUICK  \
0                0          0             1            0           1   
1                0          0             1            0           0   
...            ...        ...           ...          ...         ...   
8751             0          1             0            0           0   
8752             0          0             0            0           0   

      make_CADILLAC  make_CHEVROLET  make_CHRYSLER  make_DAEWOO  make_DODGE  \
0                 0               0              0            0           0   
1                 0               0              0            0           0   
...             ...             ...            ...          ...         ...   
8751              0               0              0            0           0   
8752              0               0              0            0           0   

      make_FORD  make_GEO  make_HONDA  make_HYUNDAI  make_KIA  make_MAZDA  \
0             0         0           0             0         0           0   
1             0         0           0             0         0           1   
...         ...       ...         ...           ...       ...         ...   
8751          0         0           0             0         0           0   
8752          1         0           0             0         0           0   

      make_MERCURY  make_MITSUBISHI  make_NISSAN  make_OLDSMOBILE  make_OTHER  \
0                0                0            0                0           0   
1                0                0            0                0           0   
...            ...              ...          ...              ...         ...   
8751             0                1            0                0           0   
8752             0                0            0                0           0   

      make_PLYMOUTH  make_PONTIAC  make_TOYOTA  
0                 0             0            0  
1                 0             0            0  
...             ...           ...          ...  
8751              0             0            0  
8752              0             0            0  

[8753 rows x 45 columns]

General description of the build_data DataFrame:
<class 'pandas.core.frame.DataFrame'>
Int64Index: 8753 entries, 0 to 8752
Data columns (total 40 columns):
 #   Column              Non-Null Count  Dtype  
---  ------              --------------  -----  
 0   total_cost          8753 non-null   float64
 1   mileage             8753 non-null   float64
 2   vehicle_age         8753 non-null   float64
 3   overage_NO          8753 non-null   uint8  
 4   overage_YES         8753 non-null   uint8  
 5   mfg_Domestic        8753 non-null   uint8  
 6   mfg_Import          8753 non-null   uint8  
 7   body_ECONOMY        8753 non-null   uint8  
 8   body_FAMILY.LARGE   8753 non-null   uint8  
 9   body_FAMILY.MEDIUM  8753 non-null   uint8  
 10  body_FAMILY.SMALL   8753 non-null   uint8  
 11  body_LUXURY         8753 non-null   uint8  
 12  color_BLACK         8753 non-null   uint8  
 13  color_BLUE          8753 non-null   uint8  
 14  color_GOLD          8753 non-null   uint8  
 15  color_GREEN         8753 non-null   uint8  
 16  color_PURPLE        8753 non-null   uint8  
 17  color_RED           8753 non-null   uint8  
 18  color_SILVER        8753 non-null   uint8  
 19  color_WHITE         8753 non-null   uint8  
 20  make_BUICK          8753 non-null   uint8  
 21  make_CADILLAC       8753 non-null   uint8  
 22  make_CHEVROLET      8753 non-null   uint8  
 23  make_CHRYSLER       8753 non-null   uint8  
 24  make_DAEWOO         8753 non-null   uint8  
 25  make_DODGE          8753 non-null   uint8  
 26  make_FORD           8753 non-null   uint8  
 27  make_GEO            8753 non-null   uint8  
 28  make_HONDA          8753 non-null   uint8  
 29  make_HYUNDAI        8753 non-null   uint8  
 30  make_KIA            8753 non-null   uint8  
 31  make_MAZDA          8753 non-null   uint8  
 32  make_MERCURY        8753 non-null   uint8  
 33  make_MITSUBISHI     8753 non-null   uint8  
 34  make_NISSAN         8753 non-null   uint8  
 35  make_OLDSMOBILE     8753 non-null   uint8  
 36  make_OTHER          8753 non-null   uint8  
 37  make_PLYMOUTH       8753 non-null   uint8  
 38  make_PONTIAC        8753 non-null   uint8  
 39  make_TOYOTA         8753 non-null   uint8  
dtypes: float64(3), uint8(37)
memory usage: 589.8 KB
None
      total_cost   mileage  vehicle_age  overage_NO  overage_YES  \
0       0.305853  0.564405     0.636364           0            1   
1       0.380964  0.581549     0.272727           1            0   
...          ...       ...          ...         ...          ...   
8751    0.388535  0.738974     0.363636           1            0   
8752    0.471578  0.544089     0.272727           1            0   

      mfg_Domestic  mfg_Import  body_ECONOMY  body_FAMILY.LARGE  \
0                1           0             0                  1   
1                0           1             0                  0   
...            ...         ...           ...                ...   
8751             0           1             0                  0   
8752             1           0             0                  1   

      body_FAMILY.MEDIUM  body_FAMILY.SMALL  body_LUXURY  color_BLACK  \
0                      0                  0            0            0   
1                      0                  1            0            0   
...                  ...                ...          ...          ...   
8751                   1                  0            0            0   
8752                   0                  0            0            0   

      color_BLUE  color_GOLD  color_GREEN  color_PURPLE  color_RED  \
0              0           0            0             0          0   
1              0           0            0             0          0   
...          ...         ...          ...           ...        ...   
8751           0           0            0             0          1   
8752           1           0            0             0          0   

      color_SILVER  color_WHITE  make_BUICK  make_CADILLAC  make_CHEVROLET  \
0                1            0           1              0               0   
1                1            0           0              0               0   
...            ...          ...         ...            ...             ...   
8751             0            0           0              0               0   
8752             0            0           0              0               0   

      make_CHRYSLER  make_DAEWOO  make_DODGE  make_FORD  make_GEO  make_HONDA  \
0                 0            0           0          0         0           0   
1                 0            0           0          0         0           0   
...             ...          ...         ...        ...       ...         ...   
8751              0            0           0          0         0           0   
8752              0            0           0          1         0           0   

      make_HYUNDAI  make_KIA  make_MAZDA  make_MERCURY  make_MITSUBISHI  \
0                0         0           0             0                0   
1                0         0           1             0                0   
...            ...       ...         ...           ...              ...   
8751             0         0           0             0                1   
8752             0         0           0             0                0   

      make_NISSAN  make_OLDSMOBILE  make_OTHER  make_PLYMOUTH  make_PONTIAC  \
0               0                0           0              0             0   
1               0                0           0              0             0   
...           ...              ...         ...            ...           ...   
8751            0                0           0              0             0   
8752            0                0           0              0             0   

      make_TOYOTA  
0               0  
1               0  
...           ...  
8751            0  
8752            0  

[8753 rows x 40 columns]

Dimensions of build_data: (8753, 40)

----------------------------------------------

Create dev_data DataFrame
Variables in prelim_dev_data Index(['overage', 'total_cost', 'domestic_import', 'vehicle_type', 'color_set',
       'makex', 'mileage', 'vehicle_age', 'overage_NO', 'overage_YES',
       'mfg_Domestic', 'mfg_Import', 'body_ECONOMY', 'body_FAMILY.LARGE',
       'body_FAMILY.MEDIUM', 'body_FAMILY.SMALL', 'body_LUXURY', 'color_BLACK',
       'color_BLUE', 'color_GOLD', 'color_GREEN', 'color_PURPLE', 'color_RED',
       'color_SILVER', 'color_WHITE', 'make_BUICK', 'make_CADILLAC',
       'make_CHEVROLET', 'make_CHRYSLER', 'make_DAEWOO', 'make_DODGE',
       'make_FORD', 'make_GEO', 'make_HONDA', 'make_HYUNDAI', 'make_KIA',
       'make_MAZDA', 'make_MERCURY', 'make_MITSUBISHI', 'make_NISSAN',
       'make_OLDSMOBILE', 'make_OTHER', 'make_PLYMOUTH', 'make_PONTIAC',
       'make_TOYOTA'],
      dtype='object')

Check binary variable coding of the prelim_dev_data DataFrame:
      overage  total_cost domestic_import  vehicle_type color_set       makex  \
8753       NO        4995        Domestic       ECONOMY    PURPLE        FORD   
8754       NO        5595        Domestic  FAMILY.LARGE     GREEN  OLDSMOBILE   
...       ...         ...             ...           ...       ...         ...   
13127      NO        3571          Import       ECONOMY     GREEN      TOYOTA   
13128      NO        5268        Domestic       ECONOMY     GREEN        FORD   

       mileage  vehicle_age  overage_NO  overage_YES  mfg_Domestic  \
8753     54837            3           1            0             1   
8754     79505            7           1            0             1   
...        ...          ...         ...          ...           ...   
13127    90145            7           1            0             0   
13128    77768            4           1            0             1   

       mfg_Import  body_ECONOMY  body_FAMILY.LARGE  body_FAMILY.MEDIUM  \
8753            0             1                  0                   0   
8754            0             0                  1                   0   
...           ...           ...                ...                 ...   
13127           1             1                  0                   0   
13128           0             1                  0                   0   

       body_FAMILY.SMALL  body_LUXURY  color_BLACK  color_BLUE  color_GOLD  \
8753                   0            0            0           0           0   
8754                   0            0            0           0           0   
...                  ...          ...          ...         ...         ...   
13127                  0            0            0           0           0   
13128                  0            0            0           0           0   

       color_GREEN  color_PURPLE  color_RED  color_SILVER  color_WHITE  \
8753             0             1          0             0            0   
8754             1             0          0             0            0   
...            ...           ...        ...           ...          ...   
13127            1             0          0             0            0   
13128            1             0          0             0            0   

       make_BUICK  make_CADILLAC  make_CHEVROLET  make_CHRYSLER  make_DAEWOO  \
8753            0              0               0              0            0   
8754            0              0               0              0            0   
...           ...            ...             ...            ...          ...   
13127           0              0               0              0            0   
13128           0              0               0              0            0   

       make_DODGE  make_FORD  make_GEO  make_HONDA  make_HYUNDAI  make_KIA  \
8753            0          1         0           0             0         0   
8754            0          0         0           0             0         0   
...           ...        ...       ...         ...           ...       ...   
13127           0          0         0           0             0         0   
13128           0          1         0           0             0         0   

       make_MAZDA  make_MERCURY  make_MITSUBISHI  make_NISSAN  \
8753            0             0                0            0   
8754            0             0                0            0   
...           ...           ...              ...          ...   
13127           0             0                0            0   
13128           0             0                0            0   

       make_OLDSMOBILE  make_OTHER  make_PLYMOUTH  make_PONTIAC  make_TOYOTA  
8753                 0           0              0             0            0  
8754                 1           0              0             0            0  
...                ...         ...            ...           ...          ...  
13127                0           0              0             0            1  
13128                0           0              0             0            0  

[4376 rows x 45 columns]

General description of the dev_data DataFrame:
<class 'pandas.core.frame.DataFrame'>
Int64Index: 4376 entries, 8753 to 13128
Data columns (total 40 columns):
 #   Column              Non-Null Count  Dtype  
---  ------              --------------  -----  
 0   total_cost          4376 non-null   float64
 1   mileage             4376 non-null   float64
 2   vehicle_age         4376 non-null   float64
 3   overage_NO          4376 non-null   uint8  
 4   overage_YES         4376 non-null   uint8  
 5   mfg_Domestic        4376 non-null   uint8  
 6   mfg_Import          4376 non-null   uint8  
 7   body_ECONOMY        4376 non-null   uint8  
 8   body_FAMILY.LARGE   4376 non-null   uint8  
 9   body_FAMILY.MEDIUM  4376 non-null   uint8  
 10  body_FAMILY.SMALL   4376 non-null   uint8  
 11  body_LUXURY         4376 non-null   uint8  
 12  color_BLACK         4376 non-null   uint8  
 13  color_BLUE          4376 non-null   uint8  
 14  color_GOLD          4376 non-null   uint8  
 15  color_GREEN         4376 non-null   uint8  
 16  color_PURPLE        4376 non-null   uint8  
 17  color_RED           4376 non-null   uint8  
 18  color_SILVER        4376 non-null   uint8  
 19  color_WHITE         4376 non-null   uint8  
 20  make_BUICK          4376 non-null   uint8  
 21  make_CADILLAC       4376 non-null   uint8  
 22  make_CHEVROLET      4376 non-null   uint8  
 23  make_CHRYSLER       4376 non-null   uint8  
 24  make_DAEWOO         4376 non-null   uint8  
 25  make_DODGE          4376 non-null   uint8  
 26  make_FORD           4376 non-null   uint8  
 27  make_GEO            4376 non-null   uint8  
 28  make_HONDA          4376 non-null   uint8  
 29  make_HYUNDAI        4376 non-null   uint8  
 30  make_KIA            4376 non-null   uint8  
 31  make_MAZDA          4376 non-null   uint8  
 32  make_MERCURY        4376 non-null   uint8  
 33  make_MITSUBISHI     4376 non-null   uint8  
 34  make_NISSAN         4376 non-null   uint8  
 35  make_OLDSMOBILE     4376 non-null   uint8  
 36  make_OTHER          4376 non-null   uint8  
 37  make_PLYMOUTH       4376 non-null   uint8  
 38  make_PONTIAC        4376 non-null   uint8  
 39  make_TOYOTA         4376 non-null   uint8  
dtypes: float64(3), uint8(37)
memory usage: 294.9 KB
None
       total_cost   mileage  vehicle_age  overage_NO  overage_YES  \
8753     0.443902  0.456177     0.181818           1            0   
8754     0.520924  0.680153     0.545455           1            0   
...           ...       ...          ...         ...          ...   
13127    0.261104  0.776760     0.545455           1            0   
13128    0.478947  0.664382     0.272727           1            0   

       mfg_Domestic  mfg_Import  body_ECONOMY  body_FAMILY.LARGE  \
8753              1           0             1                  0   
8754              1           0             0                  1   
...             ...         ...           ...                ...   
13127             0           1             1                  0   
13128             1           0             1                  0   

       body_FAMILY.MEDIUM  body_FAMILY.SMALL  body_LUXURY  color_BLACK  \
8753                    0                  0            0            0   
8754                    0                  0            0            0   
...                   ...                ...          ...          ...   
13127                   0                  0            0            0   
13128                   0                  0            0            0   

       color_BLUE  color_GOLD  color_GREEN  color_PURPLE  color_RED  \
8753            0           0            0             1          0   
8754            0           0            1             0          0   
...           ...         ...          ...           ...        ...   
13127           0           0            1             0          0   
13128           0           0            1             0          0   

       color_SILVER  color_WHITE  make_BUICK  make_CADILLAC  make_CHEVROLET  \
8753              0            0           0              0               0   
8754              0            0           0              0               0   
...             ...          ...         ...            ...             ...   
13127             0            0           0              0               0   
13128             0            0           0              0               0   

       make_CHRYSLER  make_DAEWOO  make_DODGE  make_FORD  make_GEO  \
8753               0            0           0          1         0   
8754               0            0           0          0         0   
...              ...          ...         ...        ...       ...   
13127              0            0           0          0         0   
13128              0            0           0          1         0   

       make_HONDA  make_HYUNDAI  make_KIA  make_MAZDA  make_MERCURY  \
8753            0             0         0           0             0   
8754            0             0         0           0             0   
...           ...           ...       ...         ...           ...   
13127           0             0         0           0             0   
13128           0             0         0           0             0   

       make_MITSUBISHI  make_NISSAN  make_OLDSMOBILE  make_OTHER  \
8753                 0            0                0           0   
8754                 0            0                1           0   
...                ...          ...              ...         ...   
13127                0            0                0           0   
13128                0            0                0           0   

       make_PLYMOUTH  make_PONTIAC  make_TOYOTA  
8753               0             0            0  
8754               0             0            0  
...              ...           ...          ...  
13127              0             0            1  
13128              0             0            0  

[4376 rows x 40 columns]

Dimensions of dev_data: (4376, 40)

----------------------------------------------

Create final_test_data DataFrame
Variables in prelim_final_test_data Index(['overage', 'total_cost', 'domestic_import', 'vehicle_type', 'color_set',
       'makex', 'mileage', 'vehicle_age', 'overage_NO', 'overage_YES',
       'mfg_Domestic', 'mfg_Import', 'body_ECONOMY', 'body_FAMILY.LARGE',
       'body_FAMILY.MEDIUM', 'body_FAMILY.SMALL', 'body_LUXURY', 'color_BLACK',
       'color_BLUE', 'color_GOLD', 'color_GREEN', 'color_PURPLE', 'color_RED',
       'color_SILVER', 'color_WHITE', 'make_BUICK', 'make_CADILLAC',
       'make_CHEVROLET', 'make_CHRYSLER', 'make_DAEWOO', 'make_DODGE',
       'make_FORD', 'make_GEO', 'make_HONDA', 'make_HYUNDAI', 'make_KIA',
       'make_MAZDA', 'make_MERCURY', 'make_MITSUBISHI', 'make_NISSAN',
       'make_OLDSMOBILE', 'make_OTHER', 'make_PLYMOUTH', 'make_PONTIAC',
       'make_TOYOTA'],
      dtype='object')

Check binary coding of the prelim_final_test_data DataFrame:
      overage  total_cost domestic_import   vehicle_type color_set   makex  \
13129      NO        4944        Domestic  FAMILY.MEDIUM      GOLD    FORD   
13130      NO        5541        Domestic   FAMILY.LARGE      BLUE   BUICK   
...       ...         ...             ...            ...       ...     ...   
17504      NO        3361        Domestic        ECONOMY     WHITE   BUICK   
17505      NO        4068          Import  FAMILY.MEDIUM    PURPLE  NISSAN   

       mileage  vehicle_age  overage_NO  overage_YES  mfg_Domestic  \
13129    79188            5           1            0             1   
13130    72594            7           1            0             1   
...        ...          ...         ...          ...           ...   
17504    70751            8           1            0             1   
17505    61770            7           1            0             0   

       mfg_Import  body_ECONOMY  body_FAMILY.LARGE  body_FAMILY.MEDIUM  \
13129           0             0                  0                   1   
13130           0             0                  1                   0   
...           ...           ...                ...                 ...   
17504           0             1                  0                   0   
17505           1             0                  0                   1   

       body_FAMILY.SMALL  body_LUXURY  color_BLACK  color_BLUE  color_GOLD  \
13129                  0            0            0           0           1   
13130                  0            0            0           1           0   
...                  ...          ...          ...         ...         ...   
17504                  0            0            0           0           0   
17505                  0            0            0           0           0   

       color_GREEN  color_PURPLE  color_RED  color_SILVER  color_WHITE  \
13129            0             0          0             0            0   
13130            0             0          0             0            0   
...            ...           ...        ...           ...          ...   
17504            0             0          0             0            1   
17505            0             1          0             0            0   

       make_BUICK  make_CADILLAC  make_CHEVROLET  make_CHRYSLER  make_DAEWOO  \
13129           0              0               0              0            0   
13130           1              0               0              0            0   
...           ...            ...             ...            ...          ...   
17504           1              0               0              0            0   
17505           0              0               0              0            0   

       make_DODGE  make_FORD  make_GEO  make_HONDA  make_HYUNDAI  make_KIA  \
13129           0          1         0           0             0         0   
13130           0          0         0           0             0         0   
...           ...        ...       ...         ...           ...       ...   
17504           0          0         0           0             0         0   
17505           0          0         0           0             0         0   

       make_MAZDA  make_MERCURY  make_MITSUBISHI  make_NISSAN  \
13129           0             0                0            0   
13130           0             0                0            0   
...           ...           ...              ...          ...   
17504           0             0                0            0   
17505           0             0                0            1   

       make_OLDSMOBILE  make_OTHER  make_PLYMOUTH  make_PONTIAC  make_TOYOTA  
13129                0           0              0             0            0  
13130                0           0              0             0            0  
...                ...         ...            ...           ...          ...  
17504                0           0              0             0            0  
17505                0           0              0             0            0  

[4377 rows x 45 columns]

General description of the final_test_data DataFrame:
<class 'pandas.core.frame.DataFrame'>
Int64Index: 4377 entries, 13129 to 17505
Data columns (total 40 columns):
 #   Column              Non-Null Count  Dtype  
---  ------              --------------  -----  
 0   total_cost          4377 non-null   float64
 1   mileage             4377 non-null   float64
 2   vehicle_age         4377 non-null   float64
 3   overage_NO          4377 non-null   uint8  
 4   overage_YES         4377 non-null   uint8  
 5   mfg_Domestic        4377 non-null   uint8  
 6   mfg_Import          4377 non-null   uint8  
 7   body_ECONOMY        4377 non-null   uint8  
 8   body_FAMILY.LARGE   4377 non-null   uint8  
 9   body_FAMILY.MEDIUM  4377 non-null   uint8  
 10  body_FAMILY.SMALL   4377 non-null   uint8  
 11  body_LUXURY         4377 non-null   uint8  
 12  color_BLACK         4377 non-null   uint8  
 13  color_BLUE          4377 non-null   uint8  
 14  color_GOLD          4377 non-null   uint8  
 15  color_GREEN         4377 non-null   uint8  
 16  color_PURPLE        4377 non-null   uint8  
 17  color_RED           4377 non-null   uint8  
 18  color_SILVER        4377 non-null   uint8  
 19  color_WHITE         4377 non-null   uint8  
 20  make_BUICK          4377 non-null   uint8  
 21  make_CADILLAC       4377 non-null   uint8  
 22  make_CHEVROLET      4377 non-null   uint8  
 23  make_CHRYSLER       4377 non-null   uint8  
 24  make_DAEWOO         4377 non-null   uint8  
 25  make_DODGE          4377 non-null   uint8  
 26  make_FORD           4377 non-null   uint8  
 27  make_GEO            4377 non-null   uint8  
 28  make_HONDA          4377 non-null   uint8  
 29  make_HYUNDAI        4377 non-null   uint8  
 30  make_KIA            4377 non-null   uint8  
 31  make_MAZDA          4377 non-null   uint8  
 32  make_MERCURY        4377 non-null   uint8  
 33  make_MITSUBISHI     4377 non-null   uint8  
 34  make_NISSAN         4377 non-null   uint8  
 35  make_OLDSMOBILE     4377 non-null   uint8  
 36  make_OTHER          4377 non-null   uint8  
 37  make_PLYMOUTH       4377 non-null   uint8  
 38  make_PONTIAC        4377 non-null   uint8  
 39  make_TOYOTA         4377 non-null   uint8  
dtypes: float64(3), uint8(37)
memory usage: 294.9 KB
None
       total_cost   mileage  vehicle_age  overage_NO  overage_YES  \
13129    0.431403  0.683715     0.363636           1            0   
13130    0.503566  0.626027     0.545455           1            0   
...           ...       ...          ...         ...          ...   
17504    0.240058  0.609903     0.636364           1            0   
17505    0.325517  0.531333     0.545455           1            0   

       mfg_Domestic  mfg_Import  body_ECONOMY  body_FAMILY.LARGE  \
13129             1           0             0                  0   
13130             1           0             0                  1   
...             ...         ...           ...                ...   
17504             1           0             1                  0   
17505             0           1             0                  0   

       body_FAMILY.MEDIUM  body_FAMILY.SMALL  body_LUXURY  color_BLACK  \
13129                   1                  0            0            0   
13130                   0                  0            0            0   
...                   ...                ...          ...          ...   
17504                   0                  0            0            0   
17505                   1                  0            0            0   

       color_BLUE  color_GOLD  color_GREEN  color_PURPLE  color_RED  \
13129           0           1            0             0          0   
13130           1           0            0             0          0   
...           ...         ...          ...           ...        ...   
17504           0           0            0             0          0   
17505           0           0            0             1          0   

       color_SILVER  color_WHITE  make_BUICK  make_CADILLAC  make_CHEVROLET  \
13129             0            0           0              0               0   
13130             0            0           1              0               0   
...             ...          ...         ...            ...             ...   
17504             0            1           1              0               0   
17505             0            0           0              0               0   

       make_CHRYSLER  make_DAEWOO  make_DODGE  make_FORD  make_GEO  \
13129              0            0           0          1         0   
13130              0            0           0          0         0   
...              ...          ...         ...        ...       ...   
17504              0            0           0          0         0   
17505              0            0           0          0         0   

       make_HONDA  make_HYUNDAI  make_KIA  make_MAZDA  make_MERCURY  \
13129           0             0         0           0             0   
13130           0             0         0           0             0   
...           ...           ...       ...         ...           ...   
17504           0             0         0           0             0   
17505           0             0         0           0             0   

       make_MITSUBISHI  make_NISSAN  make_OLDSMOBILE  make_OTHER  \
13129                0            0                0           0   
13130                0            0                0           0   
...                ...          ...              ...         ...   
17504                0            0                0           0   
17505                0            1                0           0   

       make_PLYMOUTH  make_PONTIAC  make_TOYOTA  
13129              0             0            0  
13130              0             0            0  
...              ...           ...          ...  
17504              0             0            0  
17505              0             0            0  

[4377 rows x 40 columns]

Dimensions of final_test_data: (4377, 40)

-------------------------------
      Study 5 Modeling         
-------------------------------

Shape of X_build: (8753, 38)
Shape of y_build: (8753, 2)
Shape of X_final_test: (4377, 38)
Shape of y_final_test: (4377, 2)

Random forest classification elapsed time (seconds): 2.375

---------------------------------------------------------------------------
Random Forests Regression Model Explanatory Variable Importance Results
                  name         description  importance
0           total_cost          total_cost    0.292539
1              mileage             mileage    0.216747
2          vehicle_age         vehicle_age    0.120810
3         mfg_Domestic        mfg_Domestic    0.007425
4           mfg_Import          mfg_Import    0.006970
5         body_ECONOMY        body_ECONOMY    0.032376
6    body_FAMILY.LARGE   body_FAMILY.LARGE    0.011063
7   body_FAMILY.MEDIUM  body_FAMILY.MEDIUM    0.019176
8    body_FAMILY.SMALL   body_FAMILY.SMALL    0.011410
9          body_LUXURY         body_LUXURY    0.025572
10         color_BLACK         color_BLACK    0.004065
11          color_BLUE          color_BLUE    0.013563
12          color_GOLD          color_GOLD    0.009214
13         color_GREEN         color_GREEN    0.014201
14        color_PURPLE        color_PURPLE    0.010823
15           color_RED           color_RED    0.010980
16        color_SILVER        color_SILVER    0.009156
17         color_WHITE         color_WHITE    0.013879
18          make_BUICK          make_BUICK    0.035981
19       make_CADILLAC       make_CADILLAC    0.001203
20      make_CHEVROLET      make_CHEVROLET    0.016027
21       make_CHRYSLER       make_CHRYSLER    0.001789
22         make_DAEWOO         make_DAEWOO    0.011328
23          make_DODGE          make_DODGE    0.001881
24           make_FORD           make_FORD    0.008709
25            make_GEO            make_GEO    0.010159
26          make_HONDA          make_HONDA    0.003172
27        make_HYUNDAI        make_HYUNDAI    0.001499
28            make_KIA            make_KIA    0.002479
29          make_MAZDA          make_MAZDA    0.003542
30        make_MERCURY        make_MERCURY    0.003560
31     make_MITSUBISHI     make_MITSUBISHI    0.000661
32         make_NISSAN         make_NISSAN    0.009141
33     make_OLDSMOBILE     make_OLDSMOBILE    0.042481
34          make_OTHER          make_OTHER    0.001850
35       make_PLYMOUTH       make_PLYMOUTH    0.002371
36        make_PONTIAC        make_PONTIAC    0.008451
37         make_TOYOTA         make_TOYOTA    0.003744

Random Forest Confusion Matrix (rows actual, columns predicted)

             NO   YES 
       NO  3307   210 
      YES   654   206 

Random Forest Predictive Accuracy:  0.803

Summary of Random Forest Precision and Recall

              precision    recall  f1-score   support

          NO       0.83      0.94      0.88      3517
         YES       0.50      0.24      0.32       860

   micro avg       0.80      0.80      0.80      4377
   macro avg       0.67      0.59      0.60      4377
weighted avg       0.77      0.80      0.77      4377
 samples avg       0.80      0.80      0.80      4377

precision = proportion of returned results that are relevant
recall = proportion of relevant documents that are returned
f1-score = harmonic mean of precision and recall

-------------------------------
      Study 6 Modeling         
-------------------------------

Shape of X_build: (8753, 38)
First two X_build vehicles:
[[0.30585266 0.56440487 0.63636364 1.         0.         0.
  1.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         1.         0.
  1.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.         0.        ]]
Shape of X_dev: (4376, 38)
First two X_dev vehicles:
[[0.44390244 0.45617731 0.18181818 1.         0.         1.
  0.         0.         0.         0.         0.         0.
  0.         0.         1.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  1.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.         0.        ]]
Shape of X_final_test: (4377, 38)
First two X_final_test vehicles:
[[0.43140336 0.68371462 0.36363636 1.         0.         0.
  0.         1.         0.         0.         0.         0.
  1.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  1.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.         0.        ]]
Shape of y_build: (8753, 2)
Shape of y_dev: (4376, 2)
Shape of y_final_test: (4377, 2)

----------------------------------------------
2  nodes in first hidden layer
2  nodes in second hidden layer

WARNING: The TensorFlow contrib module will not be included in TensorFlow 2.0.
For more information, please see:
  * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
  * https://github.com/tensorflow/addons
If you depend on functionality not listed there, please file an issue.

0 Build set accuracy: 0.60710615 Dev set accuracy: 0.6101462
20 Build set accuracy: 0.7806466 Dev set accuracy: 0.7927331
40 Build set accuracy: 0.7945847 Dev set accuracy: 0.8039305
60 Build set accuracy: 0.79595566 Dev set accuracy: 0.8059872
80 Build set accuracy: 0.79595566 Dev set accuracy: 0.8059872
99 Build set accuracy: 0.79595566 Dev set accuracy: 0.8059872

Neural network elapsed time (seconds): 1.0

----------------------------------------------
2  nodes in first hidden layer
4  nodes in second hidden layer
0 Build set accuracy: 0.45892838 Dev set accuracy: 0.4689214
20 Build set accuracy: 0.67394036 Dev set accuracy: 0.6773309
40 Build set accuracy: 0.71986747 Dev set accuracy: 0.72234917
60 Build set accuracy: 0.7476294 Dev set accuracy: 0.75548446
80 Build set accuracy: 0.7768765 Dev set accuracy: 0.7833638
99 Build set accuracy: 0.784531 Dev set accuracy: 0.79021937

Neural network elapsed time (seconds): 1.359

----------------------------------------------
2  nodes in first hidden layer
8  nodes in second hidden layer
0 Build set accuracy: 0.62675655 Dev set accuracy: 0.64122486
20 Build set accuracy: 0.7665943 Dev set accuracy: 0.7705667
40 Build set accuracy: 0.7886439 Dev set accuracy: 0.80095977
60 Build set accuracy: 0.7950417 Dev set accuracy: 0.8023309
80 Build set accuracy: 0.79595566 Dev set accuracy: 0.80530167
99 Build set accuracy: 0.7961842 Dev set accuracy: 0.8059872

Neural network elapsed time (seconds): 1.781

----------------------------------------------
2  nodes in first hidden layer
16  nodes in second hidden layer
0 Build set accuracy: 0.60219353 Dev set accuracy: 0.6117459
20 Build set accuracy: 0.776648 Dev set accuracy: 0.78747714
40 Build set accuracy: 0.79584146 Dev set accuracy: 0.8055302
60 Build set accuracy: 0.79584146 Dev set accuracy: 0.80575866
80 Build set accuracy: 0.79584146 Dev set accuracy: 0.80575866
99 Build set accuracy: 0.79595566 Dev set accuracy: 0.8059872

Neural network elapsed time (seconds): 2.5

----------------------------------------------
4  nodes in first hidden layer
2  nodes in second hidden layer
0 Build set accuracy: 0.7597395 Dev set accuracy: 0.77330893
20 Build set accuracy: 0.7664801 Dev set accuracy: 0.78016454
40 Build set accuracy: 0.7790472 Dev set accuracy: 0.78839123
60 Build set accuracy: 0.7878442 Dev set accuracy: 0.79456127
80 Build set accuracy: 0.79092884 Dev set accuracy: 0.79936016
99 Build set accuracy: 0.793328 Dev set accuracy: 0.80278796

Neural network elapsed time (seconds): 0.984

----------------------------------------------
4  nodes in first hidden layer
4  nodes in second hidden layer
0 Build set accuracy: 0.4283103 Dev set accuracy: 0.40790677
20 Build set accuracy: 0.70158803 Dev set accuracy: 0.69721204
40 Build set accuracy: 0.7455729 Dev set accuracy: 0.75
60 Build set accuracy: 0.7777905 Dev set accuracy: 0.78107864
80 Build set accuracy: 0.78875816 Dev set accuracy: 0.79364717
99 Build set accuracy: 0.7930995 Dev set accuracy: 0.7986746

Neural network elapsed time (seconds): 1.156

----------------------------------------------
4  nodes in first hidden layer
8  nodes in second hidden layer
0 Build set accuracy: 0.39312235 Dev set accuracy: 0.39122486
20 Build set accuracy: 0.7430595 Dev set accuracy: 0.7582267
40 Build set accuracy: 0.78727293 Dev set accuracy: 0.79844606
60 Build set accuracy: 0.7925283 Dev set accuracy: 0.80438757
80 Build set accuracy: 0.79389924 Dev set accuracy: 0.80507314
99 Build set accuracy: 0.79595566 Dev set accuracy: 0.8062157

Neural network elapsed time (seconds): 1.594

----------------------------------------------
4  nodes in first hidden layer
16  nodes in second hidden layer
0 Build set accuracy: 0.2992117 Dev set accuracy: 0.29341865
20 Build set accuracy: 0.71586883 Dev set accuracy: 0.7216636
40 Build set accuracy: 0.78921515 Dev set accuracy: 0.7954753
60 Build set accuracy: 0.7943562 Dev set accuracy: 0.803702
80 Build set accuracy: 0.79584146 Dev set accuracy: 0.8059872
99 Build set accuracy: 0.79595566 Dev set accuracy: 0.8059872

Neural network elapsed time (seconds): 2.172

----------------------------------------------
8  nodes in first hidden layer
2  nodes in second hidden layer
0 Build set accuracy: 0.5529533 Dev set accuracy: 0.56101465
20 Build set accuracy: 0.7397464 Dev set accuracy: 0.7570841
40 Build set accuracy: 0.767851 Dev set accuracy: 0.779936
60 Build set accuracy: 0.784988 Dev set accuracy: 0.7966179
80 Build set accuracy: 0.78875816 Dev set accuracy: 0.8005027
99 Build set accuracy: 0.7935565 Dev set accuracy: 0.80438757

Neural network elapsed time (seconds): 1.797

----------------------------------------------
8  nodes in first hidden layer
4  nodes in second hidden layer
0 Build set accuracy: 0.46189877 Dev set accuracy: 0.46297988
20 Build set accuracy: 0.72615105 Dev set accuracy: 0.731947
40 Build set accuracy: 0.76168174 Dev set accuracy: 0.7616545
60 Build set accuracy: 0.77002174 Dev set accuracy: 0.7739945
80 Build set accuracy: 0.7743631 Dev set accuracy: 0.7806216
99 Build set accuracy: 0.77973264 Dev set accuracy: 0.7881627

Neural network elapsed time (seconds): 1.609

----------------------------------------------
8  nodes in first hidden layer
8  nodes in second hidden layer
0 Build set accuracy: 0.5510111 Dev set accuracy: 0.53610605
20 Build set accuracy: 0.73791844 Dev set accuracy: 0.7401737
40 Build set accuracy: 0.7753913 Dev set accuracy: 0.7829068
60 Build set accuracy: 0.7856735 Dev set accuracy: 0.7929616
80 Build set accuracy: 0.78978634 Dev set accuracy: 0.797532
99 Build set accuracy: 0.791957 Dev set accuracy: 0.7998172

Neural network elapsed time (seconds): 2.156

----------------------------------------------
8  nodes in first hidden layer
16  nodes in second hidden layer
0 Build set accuracy: 0.4938878 Dev set accuracy: 0.48011884
20 Build set accuracy: 0.7264938 Dev set accuracy: 0.7344607
40 Build set accuracy: 0.7689935 Dev set accuracy: 0.7746801
60 Build set accuracy: 0.78464526 Dev set accuracy: 0.7929616
80 Build set accuracy: 0.79150003 Dev set accuracy: 0.797989
99 Build set accuracy: 0.792414 Dev set accuracy: 0.79821754

Neural network elapsed time (seconds): 2.656

----------------------------------------------
16  nodes in first hidden layer
2  nodes in second hidden layer
0 Build set accuracy: 0.710842 Dev set accuracy: 0.71480805
20 Build set accuracy: 0.76739407 Dev set accuracy: 0.7806216
40 Build set accuracy: 0.7844168 Dev set accuracy: 0.797989
60 Build set accuracy: 0.7905861 Dev set accuracy: 0.803702
80 Build set accuracy: 0.79298526 Dev set accuracy: 0.8039305
99 Build set accuracy: 0.7952702 Dev set accuracy: 0.80575866

Neural network elapsed time (seconds): 1.953

----------------------------------------------
16  nodes in first hidden layer
4  nodes in second hidden layer
0 Build set accuracy: 0.6080201 Dev set accuracy: 0.6236289
20 Build set accuracy: 0.72283787 Dev set accuracy: 0.7358318
40 Build set accuracy: 0.7611105 Dev set accuracy: 0.773766
60 Build set accuracy: 0.7747058 Dev set accuracy: 0.78770566
80 Build set accuracy: 0.78213185 Dev set accuracy: 0.7954753
99 Build set accuracy: 0.78715867 Dev set accuracy: 0.7986746

Neural network elapsed time (seconds): 2.266

----------------------------------------------
16  nodes in first hidden layer
8  nodes in second hidden layer
0 Build set accuracy: 0.430481 Dev set accuracy: 0.42595977
20 Build set accuracy: 0.77002174 Dev set accuracy: 0.7797075
40 Build set accuracy: 0.7952702 Dev set accuracy: 0.80530167
60 Build set accuracy: 0.79584146 Dev set accuracy: 0.8055302
80 Build set accuracy: 0.7957272 Dev set accuracy: 0.8055302
99 Build set accuracy: 0.79584146 Dev set accuracy: 0.80575866

Neural network elapsed time (seconds): 2.141

----------------------------------------------
16  nodes in first hidden layer
16  nodes in second hidden layer
0 Build set accuracy: 0.429567 Dev set accuracy: 0.43281534
20 Build set accuracy: 0.7211242 Dev set accuracy: 0.7276051
40 Build set accuracy: 0.7751628 Dev set accuracy: 0.7824497
60 Build set accuracy: 0.78978634 Dev set accuracy: 0.79936016
80 Build set accuracy: 0.7907003 Dev set accuracy: 0.7998172
99 Build set accuracy: 0.793328 Dev set accuracy: 0.8021024

Neural network elapsed time (seconds): 2.453

-------------------------------
      Study 7 Modeling         
-------------------------------

----------------------------------------------
Selected neural network architecture:
16  nodes in first hidden layer
16  nodes in second hidden layer

0 Build set accuracy: 0.429567 Final test set accuracy: 0.4283756
50 Build set accuracy: 0.78555924 Final test set accuracy: 0.7936943
100 Build set accuracy: 0.793328 Final test set accuracy: 0.8012337
150 Build set accuracy: 0.7950417 Final test set accuracy: 0.80237603
200 Build set accuracy: 0.79584146 Final test set accuracy: 0.8035184
250 Build set accuracy: 0.79595566 Final test set accuracy: 0.8035184
300 Build set accuracy: 0.79595566 Final test set accuracy: 0.8035184
350 Build set accuracy: 0.79595566 Final test set accuracy: 0.8035184
400 Build set accuracy: 0.79595566 Final test set accuracy: 0.8035184
450 Build set accuracy: 0.79595566 Final test set accuracy: 0.8035184
499 Build set accuracy: 0.79595566 Final test set accuracy: 0.8035184

Neural network elapsed time (seconds): 13.266

Neural Network Confusion Matrix (rows actual, columns predicted)

             NO   YES 
       NO  3517     0 
      YES   860     0 

Neural Network Accuracy:  0.804

-------------------------------
      Study 8 Modeling         
-------------------------------

Shape of X_build: (8753, 38)
Shape of y_build: (8753, 2)
Shape of X_final_test: (4377, 38)
Shape of y_final_test: (4377, 2)
Area under ROC curve: 0.744898532708241

Logistic Regression Confusion Matrix (rows actual, columns predicted)

             NO   YES 
       NO  3346   171 
      YES   697   163 

Logistic Regression Accuracy:  0.802

RUN COMPLETE
